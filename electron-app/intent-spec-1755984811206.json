{
  "name": "Create Inventory Item in Zoho Inventory",
  "description": "Login to Zoho Inventory and create a new inventory item with name, selling price, and cost price",
  "url": "https://www.google.com/?zx=1755984621441&no_sw_cr=1",
  "params": [
    "LOGIN_ID",
    "PASSWORD",
    "ITEM_NAME",
    "SELLING_PRICE",
    "COST_PRICE"
  ],
  "environment": {
    "viewport": {
      "width": 1920,
      "height": 1080
    },
    "userAgent": "Not captured",
    "cookies": false,
    "localStorage": false
  },
  "skipNavigationStates": [
    "authenticated",
    "dashboard",
    "inventory"
  ],
  "steps": [
    {
      "name": "Navigate to Zoho Inventory login",
      "ai_instruction": "Navigate to Zoho Inventory login page and wait for login form to appear",
      "snippet": "await page.goto('https://inventory.zoho.com/app/893870319#/home/gettingstarted');",
      "prefer": "snippet",
      "fallback": "ai",
      "selectors": [
        "#LOGIN_ID",
        "[name='LOGIN_ID']",
        "[placeholder*='email']",
        "input[type='email']",
        "[aria-label*='email']",
        ".login-email",
        "//input[contains(@placeholder, 'email')]"
      ],
      "preFlightChecks": [
        {
          "selector": "#LOGIN_ID",
          "required": true,
          "alternativeSelectors": [
            "[name='LOGIN_ID']",
            "input[type='email']"
          ],
          "waitFor": "visible",
          "timeout": 10000
        }
      ],
      "skipConditions": [
        {
          "type": "url_match",
          "value": "inventory.zoho.com/app",
          "skipReason": "Already logged in"
        },
        {
          "type": "element_exists",
          "value": ".user-menu, #logout-btn, .avatar",
          "skipReason": "User menu visible"
        }
      ],
      "waitBefore": {
        "type": "network",
        "condition": "networkidle0",
        "timeout": 10000
      },
      "waitAfter": {
        "type": "element",
        "condition": "visible",
        "timeout": 5000
      },
      "validation": {
        "type": "element",
        "expected": "login form visible",
        "screenshot": true,
        "continueOnFailure": false
      },
      "errorHandling": {
        "retry": 3,
        "retryDelay": 2000,
        "skipOnError": false,
        "alternativeAction": "refresh_and_retry",
        "fallbackSelectors": [
          "[name='LOGIN_ID']",
          "input[type='email']",
          ".login-input"
        ]
      },
      "performance": {
        "expectedDuration": 5000,
        "maxDuration": 15000,
        "fallbackToAI": true
      }
    },
    {
      "name": "Enter login email",
      "ai_instruction": "Enter the login email address in the email field",
      "snippet": "await page.fill('#LOGIN_ID', '{{LOGIN_ID}}');",
      "prefer": "snippet",
      "fallback": "ai",
      "selectors": [
        "#LOGIN_ID",
        "[name='LOGIN_ID']",
        "[placeholder*='email']",
        "input[type='email']",
        "[aria-label*='email']",
        ".login-email",
        "//input[contains(@placeholder, 'email')]"
      ],
      "value": "{{LOGIN_ID}}",
      "preFlightChecks": [
        {
          "selector": "#LOGIN_ID",
          "required": true,
          "alternativeSelectors": [
            "[name='LOGIN_ID']",
            "input[type='email']"
          ],
          "waitFor": "visible",
          "timeout": 5000
        }
      ],
      "waitBefore": {
        "type": "element",
        "condition": "enabled",
        "timeout": 3000
      },
      "waitAfter": {
        "type": "time",
        "condition": "500",
        "timeout": 1000
      },
      "validation": {
        "type": "element",
        "expected": "field contains email",
        "screenshot": false,
        "continueOnFailure": false
      },
      "errorHandling": {
        "retry": 3,
        "retryDelay": 1000,
        "skipOnError": false,
        "alternativeAction": "click_and_type",
        "fallbackSelectors": [
          "[name='LOGIN_ID']",
          "input[type='email']",
          ".email-input"
        ]
      },
      "performance": {
        "expectedDuration": 1000,
        "maxDuration": 5000,
        "fallbackToAI": true
      }
    },
    {
      "name": "Enter password",
      "ai_instruction": "Enter the password in the password field",
      "snippet": "await page.fill('#PASSWORD', '{{PASSWORD}}');",
      "prefer": "snippet",
      "fallback": "ai",
      "selectors": [
        "#PASSWORD",
        "[name='PASSWORD']",
        "[type='password']",
        "[placeholder*='password']",
        "[aria-label*='password']",
        ".login-password",
        "//input[@type='password']"
      ],
      "value": "{{PASSWORD}}",
      "preFlightChecks": [
        {
          "selector": "#PASSWORD",
          "required": true,
          "alternativeSelectors": [
            "[name='PASSWORD']",
            "[type='password']"
          ],
          "waitFor": "visible",
          "timeout": 5000
        }
      ],
      "waitBefore": {
        "type": "element",
        "condition": "enabled",
        "timeout": 3000
      },
      "waitAfter": {
        "type": "time",
        "condition": "500",
        "timeout": 1000
      },
      "validation": {
        "type": "element",
        "expected": "password field filled",
        "screenshot": false,
        "continueOnFailure": false
      },
      "errorHandling": {
        "retry": 3,
        "retryDelay": 1000,
        "skipOnError": false,
        "alternativeAction": "click_and_type",
        "fallbackSelectors": [
          "[name='PASSWORD']",
          "[type='password']",
          ".password-input"
        ]
      },
      "performance": {
        "expectedDuration": 1000,
        "maxDuration": 5000,
        "fallbackToAI": true
      }
    },
    {
      "name": "Click login button",
      "ai_instruction": "Click the login or sign in button to authenticate",
      "snippet": "await page.click('button[type=\"submit\"], .login-btn, #login-submit');",
      "prefer": "snippet",
      "fallback": "ai",
      "selectors": [
        "button[type='submit']",
        ".login-btn",
        "#login-submit",
        "[value='Sign In']",
        "text=Sign In",
        "[aria-label*='login']",
        "//button[contains(text(), 'Sign In')]"
      ],
      "preFlightChecks": [
        {
          "selector": "button[type='submit']",
          "required": true,
          "alternativeSelectors": [
            ".login-btn",
            "#login-submit"
          ],
          "waitFor": "enabled",
          "timeout": 5000
        }
      ],
      "skipConditions": [
        {
          "type": "url_match",
          "value": "inventory.zoho.com/app",
          "skipReason": "Already logged in"
        }
      ],
      "waitBefore": {
        "type": "element",
        "condition": "enabled",
        "timeout": 3000
      },
      "waitAfter": {
        "type": "network",
        "condition": "networkidle0",
        "timeout": 15000
      },
      "validation": {
        "type": "url",
        "expected": "inventory.zoho.com/app",
        "screenshot": true,
        "continueOnFailure": false
      },
      "errorHandling": {
        "retry": 3,
        "retryDelay": 2000,
        "skipOnError": false,
        "alternativeAction": "press_enter_on_password",
        "fallbackSelectors": [
          ".login-btn",
          "#login-submit",
          "[value='Sign In']"
        ]
      },
      "performance": {
        "expectedDuration": 5000,
        "maxDuration": 20000,
        "fallbackToAI": true
      }
    },
    {
      "name": "Navigate to Items section",
      "ai_instruction": "Navigate to the Items or Inventory section from the main dashboard",
      "snippet": "await page.goto('https://inventory.zoho.com/app/893870319#/inventory/items');",
      "prefer": "snippet",
      "fallback": "ai",
      "selectors": [
        "a[href*='inventory/items']",
        ".nav-items",
        "text=Items",
        "[aria-label*='Items']",
        ".inventory-menu",
        "#items-link",
        "//a[contains(text(), 'Items')]"
      ],
      "preFlightChecks": [
        {
          "selector": "a[href*='inventory/items']",
          "required": false,
          "alternativeSelectors": [
            "text=Items",
            ".nav-items"
          ],
          "waitFor": "visible",
          "timeout": 10000
        }
      ],
      "skipConditions": [
        {
          "type": "url_match",
          "value": "inventory/items",
          "skipReason": "Already on items page"
        }
      ],
      "waitBefore": {
        "type": "network",
        "condition": "networkidle0",
        "timeout": 10000
      },
      "waitAfter": {
        "type": "network",
        "condition": "networkidle0",
        "timeout": 10000
      },
      "validation": {
        "type": "url",
        "expected": "inventory/items",
        "screenshot": true,
        "continueOnFailure": false
      },
      "errorHandling": {
        "retry": 3,
        "retryDelay": 2000,
        "skipOnError": false,
        "alternativeAction": "click_items_menu",
        "fallbackSelectors": [
          "text=Items",
          ".nav-items",
          ".inventory-link"
        ]
      },
      "performance": {
        "expectedDuration": 3000,
        "maxDuration": 15000,
        "fallbackToAI": true
      }
    },
    {
      "name": "Click Add New Item button",
      "ai_instruction": "Click the button to add a new inventory item",
      "snippet": "await page.click('text=New Item, .add-item-btn, [aria-label*=\"Add\"]');",
      "prefer": "snippet",
      "fallback": "ai",
      "selectors": [
        "text=New Item",
        ".add-item-btn",
        "#new-item-btn",
        "[aria-label*='Add']",
        "button[title*='New Item']",
        ".btn-primary",
        "//button[contains(text(), 'New')]"
      ],
      "preFlightChecks": [
        {
          "selector": "text=New Item",
          "required": true,
          "alternativeSelectors": [
            ".add-item-btn",
            "#new-item-btn"
          ],
          "waitFor": "visible",
          "timeout": 10000
        }
      ],
      "waitBefore": {
        "type": "element",
        "condition": "visible",
        "timeout": 5000
      },
      "waitAfter": {
        "type": "network",
        "condition": "networkidle0",
        "timeout": 10000
      },
      "validation": {
        "type": "url",
        "expected": "items/new",
        "screenshot": true,
        "continueOnFailure": false
      },
      "errorHandling": {
        "retry": 3,
        "retryDelay": 1500,
        "skipOnError": false,
        "alternativeAction": "scroll_and_click",
        "fallbackSelectors": [
          ".add-item-btn",
          "#new-item-btn",
          "button[title*='New']"
        ]
      },
      "performance": {
        "expectedDuration": 3000,
        "maxDuration": 15000,
        "fallbackToAI": true
      }
    },
    {
      "name": "Enter item name",
      "ai_instruction": "Enter the name of the new inventory item in the item name field",
      "snippet": "await page.fill('#a86745e7b', '{{ITEM_NAME}}');",
      "prefer": "snippet",
      "fallback": "ai",
      "selectors": [
        "#a86745e7b",
        "[name='item_name']",
        "[placeholder*='Item Name']",
        ".item-name-field",
        "[aria-label*='Name']",
        "input[type='text']:first-of-type",
        "//input[contains(@placeholder, 'name')]"
      ],
      "value": "{{ITEM_NAME}}",
      "preFlightChecks": [
        {
          "selector": "#a86745e7b",
          "required": true,
          "alternativeSelectors": [
            "[name='item_name']",
            "[placeholder*='Item Name']"
          ],
          "waitFor": "visible",
          "timeout": 5000
        }
      ],
      "waitBefore": {
        "type": "element",
        "condition": "enabled",
        "timeout": 3000
      },
      "waitAfter": {
        "type": "time",
        "condition": "500",
        "timeout": 1000
      },
      "validation": {
        "type": "element",
        "expected": "field contains item name",
        "screenshot": false,
        "continueOnFailure": false
      },
      "errorHandling": {
        "retry": 3,
        "retryDelay": 1000,
        "skipOnError": false,
        "alternativeAction": "click_and_type",
        "fallbackSelectors": [
          "[name='item_name']",
          ".item-name-field",
          "input[type='text']:first-of-type"
        ]
      },
      "performance": {
        "expectedDuration": 1000,
        "maxDuration": 5000,
        "fallbackToAI": true
      }
    },
    {
      "name": "Enter selling price",
      "ai_instruction": "Enter the selling price for the inventory item",
      "snippet": "await page.fill('#a736388d2', '{{SELLING_PRICE}}');",
      "prefer": "snippet",
      "fallback": "ai",
      "selectors": [
        "#a736388d2",
        "[name='selling_price']",
        "[placeholder*='Selling Price']",
        ".selling-price-field",
        "[aria-label*='Price']",
        "input[type='number']:first-of-type",
        "//input[contains(@placeholder, 'price')]"
      ],
      "value": "{{SELLING_PRICE}}",
      "preFlightChecks": [
        {
          "selector": "#a736388d2",
          "required": true,
          "alternativeSelectors": [
            "[name='selling_price']",
            "[placeholder*='Selling Price']"
          ],
          "waitFor": "visible",
          "timeout": 5000
        }
      ],
      "waitBefore": {
        "type": "element",
        "condition": "enabled",
        "timeout": 3000
      },
      "waitAfter": {
        "type": "time",
        "condition": "500",
        "timeout": 1000
      },
      "validation": {
        "type": "element",
        "expected": "field contains selling price",
        "screenshot": false,
        "continueOnFailure": false
      },
      "errorHandling": {
        "retry": 3,
        "retryDelay": 1000,
        "skipOnError": false,
        "alternativeAction": "click_and_type",
        "fallbackSelectors": [
          "[name='selling_price']",
          ".selling-price-field",
          "input[type='number']:first-of-type"
        ]
      },
      "performance": {
        "expectedDuration": 1000,
        "maxDuration": 5000,
        "fallbackToAI": true
      }
    },
    {
      "name": "Enter cost price",
      "ai_instruction": "Enter the cost price for the inventory item",
      "snippet": "await page.fill('#ae04ba0b7', '{{COST_PRICE}}');",
      "prefer": "snippet",
      "fallback": "ai",
      "selectors": [
        "#ae04ba0b7",
        "[name='cost_price']",
        "[placeholder*='Cost Price']",
        ".cost-price-field",
        "[aria-label*='Cost']",
        "input[type='number']:nth-of-type(2)",
        "//input[contains(@placeholder, 'cost')]"
      ],
      "value": "{{COST_PRICE}}",
      "preFlightChecks": [
        {
          "selector": "#ae04ba0b7",
          "required": true,
          "alternativeSelectors": [
            "[name='cost_price']",
            "[placeholder*='Cost Price']"
          ],
          "waitFor": "visible",
          "timeout": 5000
        }
      ],
      "waitBefore": {
        "type": "element",
        "condition": "enabled",
        "timeout": 3000
      },
      "waitAfter": {
        "type": "time",
        "condition": "500",
        "timeout": 1000
      },
      "validation": {
        "type": "element",
        "expected": "field contains cost price",
        "screenshot": false,
        "continueOnFailure": false
      },
      "errorHandling": {
        "retry": 3,
        "retryDelay": 1000,
        "skipOnError": false,
        "alternativeAction": "click_and_type",
        "fallbackSelectors": [
          "[name='cost_price']",
          ".cost-price-field",
          "input[type='number']:nth-of-type(2)"
        ]
      },
      "performance": {
        "expectedDuration": 1000,
        "maxDuration": 5000,
        "fallbackToAI": true
      }
    },
    {
      "name": "Save the new item",
      "ai_instruction": "Click the save button to create the new inventory item",
      "snippet": "await page.click('text=Save, .save-btn, button[type=\"submit\"]');",
      "prefer": "snippet",
      "fallback": "ai",
      "selectors": [
        "text=Save",
        ".save-btn",
        "button[type='submit']",
        "#save-item-btn",
        "[aria-label*='Save']",
        ".btn-primary",
        "//button[contains(text(), 'Save')]"
      ],
      "preFlightChecks": [
        {
          "selector": "text=Save",
          "required": true,
          "alternativeSelectors": [
            ".save-btn",
            "button[type='submit']"
          ],
          "waitFor": "enabled",
          "timeout": 5000
        }
      ],
      "waitBefore": {
        "type": "element",
        "condition": "enabled",
        "timeout": 3000
      },
      "waitAfter": {
        "type": "network",
        "condition": "networkidle0",
        "timeout": 15000
      },
      "validation": {
        "type": "url",
        "expected": "item created successfully",
        "screenshot": true,
        "continueOnFailure": false
      },
      "errorHandling": {
        "retry": 3,
        "retryDelay": 2000,
        "skipOnError": false,
        "alternativeAction": "press_enter_on_form",
        "fallbackSelectors": [
          ".save-btn",
          "button[type='submit']",
          "#save-item-btn"
        ]
      },
      "performance": {
        "expectedDuration": 5000,
        "maxDuration": 20000,
        "fallbackToAI": true
      }
    }
  ],
  "preferences": {
    "dynamic_elements": "ai",
    "simple_steps": "snippet",
    "form_interactions": "snippet",
    "validation": "ai"
  },
  "screenshotValidation": {
    "enabled": true,
    "threshold": 80,
    "checkpoints": [
      "after-login",
      "after-navigation",
      "after-item-creation"
    ],
    "ignoreRegions": [
      ".timestamp",
      ".dynamic-content",
      ".notification"
    ],
    "compareMode": "structural"
  },
  "validations": [
    {
      "step": "after-login",
      "check": "url",
      "expected": "inventory.zoho.com/app"
    },
    {
      "step": "after-item-creation",
      "check": "screenshot",
      "expected": "matches_recording",
      "threshold": 85
    }
  ],
  "errorRecovery": {
    "strategies": [
      "retry",
      "refresh",
      "restart"
    ],
    "maxAttempts": 3,
    "fallbackToManual": false
  },
  "performance": {
    "totalExpectedDuration": 78791,
    "criticalPath": [
      "login",
      "navigation",
      "item-creation"
    ],
    "slowStepThreshold": 10000
  }
}